<?xml version="1.0" encoding="UTF-8"?>

<functions>
  <function>
    <prefix>escape</prefix>
    <name>escapeJava</name>
    <description><![CDATA[<p>Escapes the characters in a <code>String</code> using Java String rules.</p>

      <p>Deals correctly with quotes and control-chars (tab, backslash, cr, ff, etc.) </p>

      <p>So a tab becomes the characters <code>'\\'</code> and <code>'t'</code>.</p>

      <p>The only difference between Java strings and JavaScript strings
      is that in JavaScript, a single quote must be escaped.</p>

      <p>Example:
      <pre>
      input string: He didn't say, "Stop!"
      output string: He didn't say, \"Stop!\"
      </pre>
      </p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String escapeJava(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>escapeJavaScript</name>
    <description><![CDATA[<p>Escapes the characters in a <code>String</code> using JavaScript String rules.</p>
      <p>Escapes any values it finds into their JavaScript String form.
      Deals correctly with quotes and control-chars (tab, backslash, cr, ff, etc.) </p>

      <p>So a tab becomes the characters <code>'\\'</code> and <code>'t'</code>.</p>

      <p>The only difference between Java strings and JavaScript strings
      is that in JavaScript, a single quote must be escaped.</p>

      <p>Example:
      <pre>
      input string: He didn't say, "Stop!"
      output string: He didn\'t say, \"Stop!\"
      </pre>
      </p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String escapeJavaScript(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>unescapeJava</name>
    <description><![CDATA[<p>Unescapes any Java literals found in the <code>String</code>.
      For example, it will turn a sequence of <code>'\'</code> and
      <code>'n'</code> into a newline character, unless the <code>'\'</code>
      is preceded by another <code>'\'</code>.</p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String unescapeJava(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>unescapeJavaScript</name>
    <description><![CDATA[<p>Unescapes any JavaScript literals found in the <code>String</code>.</p>

      p>For example, it will turn a sequence of <code>'\'</code> and <code>'n'</code>
      into a newline character, unless the <code>'\'</code> is preceded by another
      <code>'\'</code>.</p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String unescapeJavaScript(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>escapeHtml</name>
    <description><![CDATA[<p>Escapes the characters in a <code>String</code> using HTML entities.</p>

      <p>For example:</p>
      <p><code>"bread" & "butter"</code></p>
      becomes:
      <p><code>&amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;</code>.</p>
      <p>Supports all known HTML 4.0 entities, including funky accents.
      Note that the commonly used apostrophe escape character (&amp;apos;)
      is not a legal entity and so is not supported).</p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String escapeHtml(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>unescapeHtml</name>
    <description><![CDATA[<p>Unescapes a string containing entity escapes to a string
      containing the actual Unicode characters corresponding to the
      escapes. Supports HTML 4.0 entities.</p>

      <p>For example, the string "&amp;lt;Fran&amp;ccedil;ais&amp;gt;"
      will become "&lt;Fran&ccedil;ais&gt;"</p>

      <p>If an entity is unrecognized, it is left alone, and inserted
      verbatim into the result string. e.g. "&amp;gt;&amp;zzzz;x" will
      become "&gt;&amp;zzzz;x".</p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String unescapeHtml(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>escapeXml</name>
    <description><![CDATA[<p>Escapes the characters in a <code>String</code> using XML entities.</p>
      <p>For example: <tt>"bread" & "butter"</tt> =>
      <tt>&amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;</tt>.
      </p>

      <p>Supports only the five basic XML entities (gt, lt, quot, amp, apos).
      Does not support DTDs or external entities.</p>

      <p>Note that unicode characters greater than 0x7f are currently escaped to
      their numerical \\u equivalent. This may change in future releases. </p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String escapeXml(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>unescapeXml</name>
    <description><![CDATA[ <p>Unescapes a string containing entity escapes to a string
      containing the actual Unicode characters corresponding to the
      escapes. Supports HTML 4.0 entities.</p>

      <p>For example, the string "&amp;lt;Fran&amp;ccedil;ais&amp;gt;"
      will become "&lt;Fran&ccedil;ais&gt;"</p>

      <p>If an entity is unrecognized, it is left alone, and inserted
      verbatim into the result string. e.g. "&amp;gt;&amp;zzzz;x" will
      become "&gt;&amp;zzzz;x".</p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String unescapeXml(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>escapeSql</name>
    <description><![CDATA[ ]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String escapeSql(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>escapeCsv</name>
    <description><![CDATA[<p>Escapes the characters in a <code>String</code> to be suitable to pass to
      an SQL query.</p>

      <p>For example,
      <pre>statement.executeQuery("SELECT * FROM MOVIES WHERE TITLE='" +
      StringEscapeUtils.escapeSql("McHale's Navy") +
      "'");</pre>
      </p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String escapeCsv(java.lang.String)</function-signature>
  </function>
  <function>
    <prefix>escape</prefix>
    <name>unescapeCsv</name>
    <description><![CDATA[<p>Returns a <code>String</code> value for an unescaped CSV column. </p>

      <p>If the value is enclosed in double quotes, and contains a comma, newline
      or double quote, then quotes are removed.
      </p>

      <p>Any double quote escaped characters (a pair of double quotes) are unescaped
      to just one double quote. </p>

      <p>If the value is not enclosed in double quotes, or is and does not contain a
      comma, newline or double quote, then the String value is returned unchanged.</p>
      </p>]]></description>
    <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
    <function-signature>java.lang.String unescapeCsv(java.lang.String)</function-signature>
  </function>
</functions>