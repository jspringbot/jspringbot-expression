<?xml version="1.0" encoding="UTF-8"?>

<functions>
  <function>
    <name>equals</name>
    <description>Compares two Strings, returning true if they are equal.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean equals(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>indexOf</name>
    <description>Finds the first index within a String, handling null.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>int indexOf(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>length</name>
    <description>Gets a String's length or 0 if the String is null.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>int length(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isEmpty</name>
    <description>Checks if a String is empty ("") or null.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isEmpty(java.lang.String)</function-signature>
  </function>
  <function>
    <name>equalsIgnoreCase</name>
    <description>Compares two Strings, returning true if they are equal ignoring the case.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean equalsIgnoreCase(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>startsWith</name>
    <description>Check if a String starts with a specified prefix.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean startsWith(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>endsWith</name>
    <description>Case insensitive check if a String ends with a specified suffix.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean endsWith(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>lastIndexOf</name>
    <description>Finds the last index within a String, handling null.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>int lastIndexOf(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>replace</name>
    <description>Replaces all occurrences of a String within another String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>contains</name>
    <description>Checks if String contains a search String, handling null.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean contains(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>split</name>
    <description>Splits the provided text into an array, using whitespace as the separator.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String[] split(java.lang.String)</function-signature>
  </function>
  <function>
    <name>trim</name>
    <description><![CDATA[Removes control characters (char <= 32) from both ends of this String, handling null by returning null.]]></description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String trim(java.lang.String)</function-signature>
  </function>
  <function>
    <name>remove</name>
    <description>Removes all occurrences of a substring from within the source string.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String remove(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>reverse</name>
    <description>Reverses the string builder placing each character in the opposite index.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String reverse(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isWhitespace</name>
    <description>Checks if the String contains only whitespace.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isWhitespace(java.lang.String)</function-signature>
  </function>
  <function>
    <name>clean</name>
    <description>Deprecated. Use trimToEmpty</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String clean(java.lang.String)</function-signature>
  </function>
  <function>
    <name>escape</name>
    <description>Deprecated. Use StringEscapeUtils.escapeJava(String)</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String escape(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isAlpha</name>
    <description>Checks if the String contains only unicode letters.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isAlpha(java.lang.String)</function-signature>
  </function>
  <function>
    <name>left</name>
    <description>Gets the leftmost characters of a String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String left(java.lang.String,int)</function-signature>
  </function>
  <function>
    <name>right</name>
    <description>Gets the rightmost characters of a String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String right(java.lang.String,int)</function-signature>
  </function>
  <function>
    <name>difference</name>
    <description>Compares two Strings, and returns the portion where they differ.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String difference(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>repeat</name>
    <description><![CDATA[Repeat a String repeat times to form a new String.
      <p>Example:
      <p>
      <table border="1">
        <tr>
          <td> ${repeatZero}= </td>
          <td> Set Variable </td>
          <td> 0 </td>
        </tr>
        <tr>
          <td> ${repeatThree}= </td>
          <td> Set Variable </td>
          <td> 3 </td>
        </tr>
        <tr>
          <td> EL Should Be Equal </td>
          <td> $[repeat('x',var('repeatZero'))] </td>
          <td> ${EMPTY} </td>
        </tr>
        <tr>
          <td> EL Should Be Equal </td>
          <td> $[repeat('x',var('repeatZero'))] </td>
          <td> yyy </td>
        </tr>
      </table>]]>
    </description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String repeat(java.lang.String,int)</function-signature>
  </function>
  <function>
    <name>startsWithIgnoreCase</name>
    <description>Case insensitive check if a String starts with a specified prefix.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean startsWithIgnoreCase(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>endsWithIgnoreCase</name>
    <description>Case insensitive check if a String ends with a specified suffix.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean endsWithIgnoreCase(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>capitalize</name>
    <description>Capitalizes a String changing the first letter to title case.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String capitalize(java.lang.String)</function-signature>
  </function>
  <function>
    <name>uncapitalize</name>
    <description>Uncapitalizes a String changing the first letter to title case.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String uncapitalize(java.lang.String)</function-signature>
  </function>
  <function>
    <name>containsAny</name>
    <description>Checks if the String contains any character in the given set of characters.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean containsAny(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>isNotBlank</name>
    <description>Checks if a String is not empty (""), not null and not whitespace only.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isNotBlank(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isBlank</name>
    <description>Checks if a String is whitespace, empty ("") or null.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isBlank(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isNotEmpty</name>
    <description>Checks if a String is not empty ("") and not null.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isNotEmpty(java.lang.String)</function-signature>
  </function>
  <function>
    <name>trimToNull</name>
    <description><![CDATA[Removes control characters (char <= 32) from both ends of this String returning null if the String is empty ("") after the trim or if it is null.]]></description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String trimToNull(java.lang.String)</function-signature>
  </function>
  <function>
    <name>trimToEmpty</name>
    <description><![CDATA[Removes control characters (char <= 32) from both ends of this String returning an empty String ("") if the String is empty ("") after the trim or if it is null.]]></description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String trimToEmpty(java.lang.String)</function-signature>
  </function>
  <function>
    <name>strip</name>
    <description>Strips whitespace from the start and end of a String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String strip(java.lang.String)</function-signature>
  </function>
  <function>
    <name>stripToNull</name>
    <description>Strips whitespace from the start and end of a String returning null if the String is empty ("") after the strip.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String stripToNull(java.lang.String)</function-signature>
  </function>
  <function>
    <name>stripToEmpty</name>
    <description>Strips whitespace from the start and end of a String returning an empty String if null input.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String stripToEmpty(java.lang.String)</function-signature>
  </function>
  <function>
    <name>stripStart</name>
    <description>Strips any of a set of characters from the start of a String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String stripStart(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>stripEnd</name>
    <description>Strips any of a set of characters from the end of a String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String stripEnd(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>ordinalIndexOf</name>
    <description>Finds the n-th index within a String, handling null.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>int ordinalIndexOf(java.lang.String,java.lang.String,int)</function-signature>
  </function>
  <function>
    <name>containsIgnoreCase</name>
    <description>Checks if String contains a search String irrespective of case, handling null.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean containsIgnoreCase(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>indexOfAny</name>
    <description>Search a String to find the first index of any character in the given set of characters.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>int indexOfAny(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>indexOfAnyBut</name>
    <description>Search a String to find the first index of any character not in the given set of characters.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>int indexOfAnyBut(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>containsOnly</name>
    <description>Checks if the String contains only certain characters.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean containsOnly(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>containsNone</name>
    <description>Checks that the String does not contain certain characters.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean containsNone(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>mid</name>
    <description>Gets characters from the middle of a String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String mid(java.lang.String,int,int)</function-signature>
  </function>
  <function>
    <name>substringBefore</name>
    <description>Gets the substring before the first occurrence of a separator.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String substringBefore(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>substringAfter</name>
    <description>Gets the substring after the first occurrence of a separator.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String substringAfter(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>substringBeforeLast</name>
    <description>Gets the substring before the last occurrence of a separator.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String substringBeforeLast(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>substringAfterLast</name>
    <description>Gets the substring after the last occurrence of a separator.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String substringAfterLast(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>substringBetween</name>
    <description>Gets the String that is nested in between two instances of the same String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String substringBetween(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>substringsBetween</name>
    <description>Searches a String for substrings delimited by a start and end tag, returning all matching substrings in an array.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String[] substringsBetween(java.lang.String,java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>getNestedString</name>
    <description>Deprecated. Use the better named substringBetween</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String getNestedString(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>splitByWholeSeparator</name>
    <description>Splits the provided text into an array, separator string specified.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>splitByWholeSeparatorPreserveAllTokens</name>
    <description>Splits the provided text into an array, separator string specified.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>splitPreserveAllTokens</name>
    <description>Splits the provided text into an array, using whitespace as the separator, preserving all tokens, including empty tokens created by adjacent separators.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>splitByCharacterType</name>
    <description>Splits a String by Character type as returned by java.lang.Character.getType(char).</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String[] splitByCharacterType(java.lang.String)</function-signature>
  </function>
  <function>
    <name>splitByCharacterTypeCamelCase</name>
    <description>Splits a String by Character type as returned by java.lang.Character.getType(char).</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String[] splitByCharacterTypeCamelCase(java.lang.String)</function-signature>
  </function>
  <function>
    <name>deleteSpaces</name>
    <description>Deprecated. Use the better localized deleteWhitespace</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String deleteSpaces(java.lang.String)</function-signature>
  </function>
  <function>
    <name>deleteWhitespace</name>
    <description>Deletes all whitespaces from a String as defined by Character.isWhitespace(char).</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String deleteWhitespace(java.lang.String)</function-signature>
  </function>
  <function>
    <name>removeStart</name>
    <description>Removes a substring only if it is at the begining of a source string, otherwise returns the source string.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String removeStart(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>removeStartIgnoreCase</name>
    <description>Case insensitive removal of a substring if it is at the begining of a source string, otherwise returns the source string.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String removeStartIgnoreCase(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>removeEnd</name>
    <description>Removes a substring only if it is at the end of a source string, otherwise returns the source string.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String removeEnd(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>removeEndIgnoreCase</name>
    <description>Case insensitive removal of a substring if it is at the end of a source string, otherwise returns the source string.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String removeEndIgnoreCase(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>replaceOnce</name>
    <description>Replaces a String with another String inside a larger String, once.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>replaceChars</name>
    <description>Replaces multiple characters in a String in one go.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>overlayString</name>
    <description>Deprecated. Use better named overlay.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String overlayString(java.lang.String,java.lang.String,int,int)</function-signature>
  </function>
  <function>
    <name>overlay</name>
    <description>Overlays part of a String with another String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String overlay(java.lang.String,java.lang.String,int,int)</function-signature>
  </function>
  <function>
    <name>chop</name>
    <description>Remove the last character from a String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String chop(java.lang.String)</function-signature>
  </function>
  <function>
    <name>chopNewline</name>
    <description>Deprecated. Use chomp instead.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String chopNewline(java.lang.String)</function-signature>
  </function>
  <function>
    <name>rightPad</name>
    <description>Right pad a String with a specified String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String rightPad(java.lang.String,int,java.lang.String)</function-signature>
  </function>
  <function>
    <name>leftPad</name>
    <description>Left pad a String with a specified String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String leftPad(java.lang.String,int,java.lang.String)</function-signature>
  </function>
  <function>
    <name>center</name>
    <description>Centers a String in a larger String of int size.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String center(java.lang.String,int,java.lang.String)</function-signature>
  </function>
  <function>
    <name>upperCase</name>
    <description>Converts a String to upper case.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String upperCase(java.lang.String)</function-signature>
  </function>
  <function>
    <name>lowerCase</name>
    <description>Converts a String to lower case.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String lowerCase(java.lang.String)</function-signature>
  </function>
  <function>
    <name>capitalise</name>
    <description>Deprecated. Use the standardly named capitalize.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String capitalise(java.lang.String)</function-signature>
  </function>
  <function>
    <name>uncapitalise</name>
    <description>Deprecated. Use the standardly named uncapitalize.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String uncapitalise(java.lang.String)</function-signature>
  </function>
  <function>
    <name>swapCase</name>
    <description>Swaps the case of a String changing upper and title case to lower case, and lower case to upper case.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String swapCase(java.lang.String)</function-signature>
  </function>
  <function>
    <name>capitaliseAllWords</name>
    <description>Deprecated. Use the relocated WordUtils.capitalize(String).</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String capitaliseAllWords(java.lang.String)</function-signature>
  </function>
  <function>
    <name>countMatches</name>
    <description>Counts how many times the substring appears in the larger String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>int countMatches(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>isAlphaSpace</name>
    <description>Checks if the String contains only unicode letters and space (' ').</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isAlphaSpace(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isAlphanumeric</name>
    <description>Checks if the String contains only unicode letters or digits.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isAlphanumeric(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isAlphanumericSpace</name>
    <description>Checks if the String contains only unicode letters, digits or space (' ').</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isAlphanumericSpace(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isAsciiPrintable</name>
    <description>Checks if the string contains only ASCII printable characters.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isAsciiPrintable(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isNumeric</name>
    <description>Checks if the String contains only unicode digits.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isNumeric(java.lang.String)</function-signature>
  </function>
  <function>
    <name>isNumericSpace</name>
    <description>Checks if the String contains only unicode digits or space (' ').</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>boolean isNumericSpace(java.lang.String)</function-signature>
  </function>
  <function>
    <name>defaultString</name>
    <description>Returns either the passed in String, or if the String is null, the value of default String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String defaultString(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>defaultIfEmpty</name>
    <description>Returns either the passed in String, or if the String is empty or null, the value of default String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String defaultIfEmpty(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>reverseDelimited</name>
    <description>Reverses a String that is delimited by a specific character.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String reverseDelimited(java.lang.String,char)</function-signature>
  </function>
  <function>
    <name>reverseDelimitedString</name>
    <description>Deprecated. Use reverseDelimited(String, char) instead.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String reverseDelimitedString(java.lang.String,java.lang.String)</function-signature>
  </function>
  <function>
    <name>abbreviate</name>
    <description>Abbreviates a String to the length passed, replacing the middle characters with the supplied replacement String.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>java.lang.String abbreviate(java.lang.String,int)</function-signature>
  </function>
  <function>
    <name>indexOfDifference</name>
    <description>Compares two Strings, and returns the index at which the Strings begin to differ.</description>
    <function-class>org.apache.commons.lang.StringUtils</function-class>
    <function-signature>int indexOfDifference(java.lang.String,java.lang.String)</function-signature>
  </function>
</functions>